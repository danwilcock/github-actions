name: Build + Release

on:
  workflow_dispatch:
  push:
    branches:
      - main


jobs:
  Terraform_Build:
    strategy:
      matrix:
        stage: ["dev","test"]
    
    env:
      ENV_FILE: './variables/${{matrix.stage}}.yml'
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    
    environment: ${{matrix.stage}}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Pre-Checks
        uses: "./.github/templates/check_approval"
      
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_AD_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_AD_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_AD_TENANT_ID }}"}'

      - uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "gh-actions" 
          secrets: 'gh-actions-storage-account-key'
        id: sa_states
             

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.8
      
      - name: Init
        id: init
        run: | 
          terraform init \
            -backend-config="access_key=${{steps.sa_states.outputs.gh-actions-storage-account-key}}" \
            -backend-config="storage_account_name=ghactionsstates" \
            -backend-config="container_name=tfstates" \
            -backend-config="key=${{matrix.stage}}.terraform.tfstate" 
      
      - name: Validate
        id: validate
        run: terraform validate
      
      


      
      

  Terraform_Plan:
    strategy:
      matrix:
        stage: ["dev","test"]
    env:
      ENV_FILE: './variables/${{matrix.stage}}.yml'
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    environment: ${{matrix.stage}}
    runs-on: ubuntu-latest
    needs: [Terraform_Build]
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Pre-Checks
        uses: "./.github/templates/check_approval"
      - run: echo $ARM_TENANT_ID
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_AD_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_AD_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_AD_TENANT_ID }}"}'

        
      - uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "gh-actions" 
          secrets: 'gh-actions-storage-account-key'
        id: sa_states 


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.8
      
      - name: Init
        id: init
        run: | 
          terraform init \
            -backend-config="access_key=${{steps.sa_states.outputs.gh-actions-storage-account-key}}" \
            -backend-config="storage_account_name=ghactionsstates" \
            -backend-config="container_name=tfstates" \
            -backend-config="key=${{matrix.stage}}.terraform.tfstate" 
      - name: Plan
        id: plan
        shell: pwsh
        run: | 
          $outFile = ""
          if("${{matrix.stage}}" -eq "test"){
            $outFile = "-out tf-plan-$(get-date -f yyyy-MM-dd).tfplan";
          }
          echo $outFile
          
          terraform plan -var-file=envs/${{matrix.stage}}.tfvars $outFile
      - name: Apply
        id: apply
        run: | 
          terraform apply -var-file=envs/${{matrix.stage}}.tfvars -auto-approve 
      
      

