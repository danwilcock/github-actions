name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:

  # Terraform_Build:
  #   env:
  #     ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  #     ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  #     ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #     ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
  #   environment: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Branch
  #       uses: actions/checkout@v3
  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: 1.2.8
  #     - name: Format Check
  #       id: fmt
  #       run: terraform fmt -check
  #     - name: Init
  #       id: init
  #       run: | 
  #         terraform init \
  #           -backend-config="access_key=YuCDT7oPMY0Kzq7zD0rsAxlkewg7tmgWFRAwClKYV8eNTHJ3NIqAiplqlV3+YL3Lrk0cQBzCXFob+AStr5MgXw==" \
  #           -backend-config="storage_account_name=ghactionsstates" \
  #           -backend-config="container_name=tfstates" \
  #           -backend-config="key=test.terraform.tfstate" 
  #     - name: Validate
  #       id: validate
  #       run: terraform validate

      
      
      

  Terraform_Plan:
    strategy:
      matrix:
        stage: ["dev","test"]
    env:
      ENV_FILE: './variables/${{matrix.stage}}.yml'
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    environment: ${{matrix.stage}}
    runs-on: ubuntu-latest
    # needs: [Pre-Checks]
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Pre-Checks
        uses: "./.github/templates/check_approval"
      - run: echo $ARM_TENANT_ID
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_AD_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_AD_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_AD_TENANT_ID }}"}'

        
      - name: Get storage account access 
        uses: azure/CLI@v1
        with:
          inlineScript: |
            $SA_ACCESS_KEY="$(az storage account keys list --account-name ghactionsstates --query [0].value -o tsv)"
            echo "::add-mask::$SA_ACCESS_KEY"
            echo SA_ACCESS_KEY=$SA_ACCESS_KEY >> $GITHUB_ENV       


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.8
      
      - name: Init
        id: init
        run: | 
          terraform init \
            -backend-config="access_key=$SA_ACCESS_KEY" \
            -backend-config="storage_account_name=ghactionsstates" \
            -backend-config="container_name=tfstates" \
            -backend-config="key=${{matrix.stage}}.terraform.tfstate" 
      - name: Plan
        id: plan
        run: | 
          terraform plan -var-file=envs/${{matrix.stage}}.tfvars
      - name: Apply
        id: apply
        run: | 
          terraform apply -var-file=envs/${{matrix.stage}}.tfvars -auto-approve 
      
      

