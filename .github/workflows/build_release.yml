name: Terraform Build

on:
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: Who to greet
        options: 
        - monalisa
        - cschleiden
      message:
        required: true
      use-emoji:
        type: boolean
        description: Include ðŸŽ‰ðŸ¤£ emojis
      environment:
        type: environment
  push:
    branches:
      - main



jobs:
  Configuration:
    runs-on: ubuntu-latest
    environment: test
    steps:  
      - name: Input variables
        run: echo "${{ toJSON(github) }}"
      - uses: actions/github-script@v4
        with:
          script: |
            // Get the approvals for this run
            const approvals = await github.request('GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            })
            
            console.log(approvals.data);

            // Empty check
            if (approvals.data.length == 0){
              core.setFailed(`There are no approvals for this deployment. This is not allowed.`);          
              return; 
            }
             
            // We are only interested in the latest one, which is the first one in the array 
            const latestApproval = approvals.data[0];
            console.log(context.actor)
            console.log(latestApproval.user.login)

            if (latestApproval.user.login == context.actor){
              core.setFailed(`Deployment to the environment is approved by the same person (${context.actor}) who initiated the deployment. This is not allowed.`);            
              return;
            }
  
  
  
  
  
  # Terraform_Build:
  #   environment: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Branch
  #       uses: actions/checkout@v3
  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: 1.2.8
  #     - name: Test input variables
  #       run: echo ${{ github.event.inputs.message }}
  #     - name: Format Check
  #       id: fmt
  #       run: terraform fmt -check
  #     - name: Init
  #       id: init
  #       run: terraform init
  #     - name: Validate
  #       id: validate
  #       run: terraform validate
      
  # Terraform_Plan:
  #   runs-on: ubuntu-latest
  #   needs: [Terraform_Build]
  #   steps:
  #     - name: Checkout Branch
  #       uses: actions/checkout@v3
      
      
      

